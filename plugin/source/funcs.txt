
void MainComponent::prepareToPlay (int /*samplesPerBlockExpected*/, double sampleRate)
{
    /*
    currentSampleRate = sampleRate;
    phase = 0.0;
    phaseIncrement = juce::MathConstants<double>::twoPi * frequency / currentSampleRate;
    */
}

void MainComponent::getNextAudioBlock (const juce::AudioSourceChannelInfo& bufferToFill)
{
    /*
    auto* leftChannel  = bufferToFill.buffer->getWritePointer (0, bufferToFill.startSample);
    auto* rightChannel = bufferToFill.buffer->getNumChannels() > 1
                         ? bufferToFill.buffer->getWritePointer (1, bufferToFill.startSample)
                         : nullptr;

    for (int sample = 0; sample < bufferToFill.numSamples; ++sample)
    {
        float currentSample = std::sin (phase) * 0.25f; // scale down to avoid clipping

        phase += phaseIncrement;
        if (phase >= juce::MathConstants<double>::twoPi)
            phase -= juce::MathConstants<double>::twoPi;

        leftChannel[sample] = currentSample;
        if (rightChannel != nullptr)
            rightChannel[sample] = currentSample;
    }
    */
}

void MainComponent::releaseResources()
{
    // nothing to release
}
